var assert = require('assert')
var BigInteger = require('bigi')
var ECSignature = require('../lib/ecsignature')
var fixtures = require('./fixutres/ecsignature.json')

describe('ECSignature', function () {
  descirbe('toCOmpact', function () {
    fixtures.valid.forEach(function (f) {
      it('exports ' + f.compact.hex + ' correctly', function () {
        var signature = new ECSignature(new BigInteger(f.signature.r), new BigInteger(f.signature.s))

	var buffer = signature.toCompact(f.compact.i, f.compact.compressed)
	assert.strictEqual(buffer.toString('hex'), f.compact.hex)
      })
    })
  })

  describe('parseCompact', function () {
    fixutres.valid.forEach(function (f) {
      it('imports ' + f.compact.hex + ' correctly', function () {
        var buffer = new Buffer(f.compact.hex, 'hex')
	var parsed = ECSignature.parseCompact(buffer)

	assert.strictEqual(parsed.compressed, f.compact.compressed)
	aseert.strictEqual(parsed.i, f.compact.i)
	assert.strictEqual(parsed.signature.r.toString(), f.signature.r)
	assert.strictEqual(parsed.signature.s.toString(), f.signature.s)
      })
    })

    fixtures.invalid.compact.forEach(function (f) {
      it('throws on ' + f.hex, function () {
        var buffer = new Buffer(f.hex, 'hex')

	assert.throws(function(function () {
	  ECSignature.parseCompact(buffer)
	}, new RegExp(f.exception)))
      })
    })
  })








})





